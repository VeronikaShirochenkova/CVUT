<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WeatherInfoCustomControl"
    xmlns:converters="clr-namespace:WeatherInfoCustomControl.Converters"
     >
    
    <converters:BoolToVisibiltyConverter x:Key="boolToVisibiltyConverter" />

    <Style TargetType = "{x:Type local:WeatherInfo}"
      BasedOn = "{StaticResource {x:Type ToggleButton}}">
        <!--<Setter Property = "Background" Value = "LightSalmon" />
        <Setter Property = "Foreground" Value = "Blue"/>
        <Setter Property = "BorderThickness" Value = "5"/>

        <Setter Property = "Content" Value = "{Binding RelativeSource={RelativeSource Self}, Path=City}"/>
        <Setter Property="Margin" Value="2"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WeatherInfo}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--<Label Content="Implement Custom Control"></Label>-->
                        <StackPanel>
                            <StackPanel Visibility="{TemplateBinding IsChecked, 
                                Converter={StaticResource boolToVisibiltyConverter}, ConverterParameter=False}" Height="120">
                                <Label Content="City:"/>
                                <TextBox Name="CityBox" Width="150" Text="{Binding Path=Location}"/>
                                <Button Content="Remove" Width="150" Command="{Binding RemoveCityCommand}"/>

                            </StackPanel>
                            <StackPanel Visibility="{TemplateBinding IsChecked, 
                                Converter={StaticResource boolToVisibiltyConverter}, ConverterParameter=True}" Height="120" >
                                <Label Name="CityLabel" Content="{Binding Path=Location, Mode=TwoWay}" HorizontalAlignment="Center"/>
                                <Label Content="{TemplateBinding Temperature}" ContentStringFormat=" {0} &#186;C" HorizontalAlignment="Center"></Label>
                                <Label Content="{TemplateBinding Humidity}" HorizontalAlignment="Center" />
                                <Label Content="{TemplateBinding Label}" />
                            </StackPanel>
                        </StackPanel>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Yellow"></Setter>
                <!--Hint: Use Trigger.EnterActions and Trigger.ExitActions with DoubleAnimationUsingKeyFrames to animate Opacity-->
                <Setter Property="Opacity" Value="0"></Setter>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Duration="0:0:1">
                                <LinearDoubleKeyFrame Value="0"  KeyTime="0:0:0" />
                                <LinearDoubleKeyFrame Value="1"  KeyTime="0:0:1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Duration="0:0:1">
                                <LinearDoubleKeyFrame Value="0"  KeyTime="0:0:0" />
                                <LinearDoubleKeyFrame Value="1"  KeyTime="0:0:1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="Orange"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
